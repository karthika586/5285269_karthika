#include <stdio.h>
#include <string.h>
#define MOD 1000000007

long long power(long long a, long long b) {
    long long result = 1;
    a = a % MOD;
    while (b > 0) {
        if (b % 2 == 1)
            result = (result * a) % MOD;
        a = (a * a) % MOD;
        b = b / 2;
    }
    return result;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n, m;
        scanf("%d %d", &n, &m);

        long long row[m+1];   
        memset(row, 0, sizeof(row));

        row[0] = 1;
        for (int i = 1; i <= m; i++) {
            if (i >= 1) row[i] = (row[i] + row[i-1]) % MOD;
            if (i >= 2) row[i] = (row[i] + row[i-2]) % MOD;
            if (i >= 3) row[i] = (row[i] + row[i-3]) % MOD;
            if (i >= 4) row[i] = (row[i] + row[i-4]) % MOD;
        }

        
        long long total[m+1];
        for (int i = 1; i <= m; i++) {
            total[i] = power(row[i], n);
        }

        
        long long good[m+1];
        good[0] = 1;
        for (int i = 1; i <= m; i++) {
            good[i] = total[i];
            for (int j = 1; j < i; j++) {
                good[i] = (good[i] - (good[j] * total[i-j]) % MOD + MOD) % MOD;
            }
        }

        printf("%lld\n", good[m]);
    }

    return 0;
}
